<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<context:property-placeholder location="classpath*:*.properties" />
			
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package -->
	<context:component-scan base-package="com.sitequesttech.social.watcher" />

	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven /> 
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
      
    <property name="basenames">
      <list>
        <value>classpath:messages</value>
         <value>socialwatcher.properties</value>
      </list>
     </property>
	<property name="cacheSeconds" value="1" />
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Declare a view resolver -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
    		p:prefix="/WEB-INF/views/" p:suffix=".jsp" p:order="1">
    	<property name="contentType" value="text/html;charset=UTF-8" />
    </bean>
    
   <mvc:interceptors>
		<bean class="com.sitequesttech.social.watcher.web.interceptor.LoginContextInterceptor" />
	</mvc:interceptors>

	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:order="3" p:defaultErrorView="exception-caught" p:warnLogCategory="warn" />
    	 
 	<util:properties id="socialWatcherPropertiesBean"
 					location="classpath:socialwatcher.properties"/>
 	
 	<!-- Imports tiles configuration -->
	<!-- <import resource="tiles-context.xml"/> -->
 	
	<!-- Imports datasource configuration -->
	<import resource="socialwatcher-spring-data-test.xml"/>
	
	<!-- Imports scheduler configuration -->
	<import resource="socialwatcher-spring-scheduler-test.xml"/>
	
	<!-- Imports mail configuration -->
	<import resource="socialwatcher-spring-mail-test.xml"/>
	
	<!-- Imports thymeleaf configuration -->
	<import resource="socialwatcher-spring-thymeleaf-test.xml"/>
	
	<!-- initializing data to realize some test first time projectsetup-->
	<!-- <beans>
		<bean id="initDataService" class="com.sitequesttech.social.watcher.service.crud.InitDataService"
			init-method="init" />
	</beans> -->
	
</beans>
